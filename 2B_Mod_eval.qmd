---
title: "Model Evaluation"
author: "Juan Fonseca"
format: html
---

```{r}
library(tidyverse)
library(tidymodels)
library(performance)
library(sf)
library(kableExtra)
```

## Load model data

Loading the models previously fitted

```{r}
load("03_preprocessing_files/fitted_models.RData")
```

### Producing performance metrics

For the whole dataset
```{r}
model_metrics <- do.call(rbind,lapply(models,\(x){
  tAIC = performance::performance_aicc(x)
  tpR2 = performance::r2_efron(x)
  trmse = performance::rmse(x)
  tmae = performance::mae(x)
  tibble(AIC = tAIC, pR2 = tpR2,rmse = trmse, mae = tmae)
})) |> cbind(tibble(model = names(models)))
```

For major roads
```{r}
model_metrics_major <- do.call(rbind,lapply(models_major,\(x){
  tAIC = performance::performance_aicc(x)
  tpR2 = performance::r2_efron(x)
  trmse = performance::rmse(x)
  tmae = performance::mae(x)
  tibble(AIC = tAIC, pR2 = tpR2,rmse = trmse, mae = tmae)
})) |> cbind(tibble(model = names(models_major)))
```

#### Validating the predictive performance

For all dataset
```{r}
model_validation <- do.call(rbind,lapply(models,\(x){
  tibble(rmse = caret::RMSE(predict(x,test_data,type = "response"),obs = test_data$flow.2023,na.rm = T),
         mae = caret::MAE(predict(x,test_data,type = "response"),obs = test_data$flow.2023,na.rm = T))
}))|> cbind(tibble(model = names(models)))
```

For major roads

```{r}
model_validation_major <- do.call(rbind,lapply(models_major,\(x){
  tibble(rmse = caret::RMSE(predict(x,test_data_major,type = "response"),obs = test_data_major$flow.2023,na.rm = T),
         mae = caret::MAE(predict(x,test_data_major,type = "response"),obs = test_data_major$flow.2023,na.rm = T))
}))|> cbind(tibble(model = names(models_major)))
```

All dataset
```{r}
model_metrics |>
  pivot_longer(-model) |>
  filter(name !="AIC") |> 
  mutate(mod_type = str_extract(model,"^\\w")) |> 
  ggplot(aes(value,fill = mod_type))+
  geom_histogram()+
  facet_wrap(name~.,nrow = 1,scales = "free_x")+
  theme(legend.position = "top")
```


Major dataset

```{r}
model_metrics_major |>
  pivot_longer(-model) |>
  filter(name !="AIC") |> 
  mutate(mod_type = str_extract(model,"^\\w")) |> 
  ggplot(aes(value,fill = mod_type))+
  geom_histogram()+
  facet_wrap(name~.,nrow = 1,scales = "free_x")+
  theme(legend.position = "top")
```

A quick look of the observed vs predicted using the validation subset

```{r}
plot(x=predict(models[["B1c_model.nb"]],test_data,type = "response"),y=test_data$flow.2023,xlim = c(0,1e4),ylim = c(0,2e4))
abline(a = 0,b = 1)
```




```{r}
models$C5a_model.nb |> summary()
models$C5a_model.p|> summary()
```

### Extracting coefficients

For the whole dataset

```{r}
my_models <- c("A_model.p","A_model.nb","B5b_model.p","B5b_model.nb","C2a_model.p","C2a_model.nb")

my_models %in% names(models)

```

```{r}
coefs <- do.call(bind_rows, lapply(my_models,\(x){
  y = models[[x]] |> confint() |> exp() |> as.data.frame()
  y$est <- models[[x]] |> coefficients() |> exp()
  y$parameter <- row.names(y)
  y$model <- x
  return(tibble(y))
}))


coef_sum <- coefs |> 
  rename(lowlim=`2.5 %`,highlim= `97.5 %`) |> 
  mutate(mod_type = str_extract(model,"^\\w{1,3}(?=_)"),
       Dist = str_extract(model,"(?<=\\.)\\w{1,2}")) |> 
select(mod_type,Dist,parameter,est,lowlim,highlim)

```

For major roads

```{r}
my_models_major <- c("B4b_model.p","B4b_model.nb","C1b_model.p","C1b_model.nb")
```

```{r}
coefs_major <- do.call(bind_rows, lapply(my_models_major,\(x){
  y = models_major[[x]] |> confint() |> exp() |> as.data.frame()
  y$est <- models_major[[x]] |> coefficients() |> exp()
  y$parameter <- row.names(y)
  y$model <- x
  return(tibble(y))
}))


coef_sum_major <- coefs_major |> 
  rename(lowlim=`2.5 %`,highlim= `97.5 %`) |> 
  mutate(mod_type = str_extract(model,"^\\w{1,3}(?=_)"),
       Dist = str_extract(model,"(?<=\\.)\\w{1,2}")) |> 
select(mod_type,Dist,parameter,est,lowlim,highlim)

```


```{r}
save(model_metrics,
     model_metrics_major,
     model_validation,
     model_validation_major,
     coefs,
     coefs_major,
     file = "03_preprocessing_files/model_metrics.RData")
```
