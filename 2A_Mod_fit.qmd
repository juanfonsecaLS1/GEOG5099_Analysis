---
title: "Fitting"
author: "Juan Fonseca"
format: html
---

```{r}
library(sf)
library(tidyverse)
```

## Loading data

```{r}
model_data_expanded <- st_read("03_preprocessing_files/model_data.gpkg")
par_matrix <- read_csv("parameters_matrix.csv") |>
  mutate(across(-Model,\(x) !is.na(x)))
```


## Splitting dataset into Trainning/Validation
```{r}
myvars <- names(par_matrix)[2:15]

full_dataset <- model_data_expanded |> st_drop_geometry() |> drop_na(flow.2023)

full_dataset_major <- full_dataset |> filter(highway %in% c("trunk","primary","secondary"))

library(caret)
set.seed(1234)
part_index <- createDataPartition(full_dataset$flow.2023,p = 0.7,list = F)
set.seed(1234)
part_index_major <- createDataPartition(full_dataset_major$flow.2023,p = 0.7,list = F)

train_data <- full_dataset[part_index,]
test_data <- full_dataset[-part_index,]

train_data_major <- full_dataset_major[part_index_major,]
test_data_major <- full_dataset_major[-part_index_major,]
```


## Fitting models
```{r}
models_control <- tibble(model=par_matrix$Model,
                 # Preparing all formulas for the models
                 form = apply(
  par_matrix[,2:15],
  1,
  \(x) paste0("flow.2023 ~ ",
                         paste(names(par_matrix)[2:15][x],
                               collapse = " + "))))

models_control
```


### Fitting models

For the whole dataset

```{r}
models <- lapply(models_control$form,\(x){
                  
                 model.p = glm(as.formula(x),
                               data = train_data,
                               family = "poisson")
                 
                 model.nb = MASS::glm.nb(as.formula(x),
                                          data = train_data)
                 
                 return(list(model.p = model.p, model.nb = model.nb))
                        })

names(models) <- models_control$model

models <- list_flatten(models)
```

For major roads `highway > Secondary` 

```{r}
models_major <- lapply(models_control$form[2:51],\(x){
                  
                 model.p = glm(as.formula(x),
                               data = train_data_major,
                               family = "poisson")
                 
                 model.nb = MASS::glm.nb(as.formula(x),
                                          data = train_data_major)
                 
                 return(list(model.p = model.p, model.nb = model.nb))
                        })

names(models_major) <- models_control$model[2:51]

models_major <- list_flatten(models_major)

```


## Saving the data

```{r}
save(models,
     models_major,
     model_data_expanded,
     par_matrix,
     models_control,
     test_data,
     train_data,
     test_data_major,
     train_data_major,
     file = "03_preprocessing_files/fitted_models.RData")
```


















